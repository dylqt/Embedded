C51 COMPILER V9.52.0.0   POWER                                                             06/08/2016 09:44:06 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE POWER
OBJECT MODULE PLACED IN power.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE power.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "power.h"
   2          
   3          #define STDVCC 4.2    // 标准电压4.2v
   4          #define STABLEV 1.28  // 稳定电压值1.27v
   5          
   6          unsigned char getBatteryTimes = 10;
   7          
   8          void batteryInit(void)
   9          {
  10   1         //初始化  u1.8   u1.6  u1.7  为强输出模式；
  11   1         P6M1 &= ~0x0e;
  12   1         P6M0 |= 0x0e;
  13   1         //u1.5 为内部电阻上拉输入模式；
  14   1         P6M1 &= ~0x01;
  15   1         P6M0 &= ~0x01;
  16   1         //且u1.8为低电平；u1.6为高电平； u1.7为高电平；
  17   1      
  18   1         //SendString4("Sys = 1 \n ");
  19   1         System_Power_Vcc_ON_OFF = 0;
  20   1         VSEL = 1;
  21   1         BYP = 1;
  22   1         
  23   1         PG = 1;  // 电源模块状态标志
  24   1         
  25   1         //SendString4("Sys = 0 \n ");
  26   1        //Delay999ms();
  27   1         P4M1 = 0x00;
  28   1         P4M0 = 0x01;
  29   1         death_ctron = 0; // 先拉低复位线
  30   1         System_Power_Vcc_ON_OFF = 1; // 开总电源
  31   1         
  32   1        // SendString4("Sys = 1 \n ");
  33   1         
  34   1         Delay100ms();
  35   1         death_ctron = 1; // 关闭复位线
  36   1      }
  37          
  38          
  39          /*
  40            功能 读取电压
  41            分辨率1024，标准电压1.27v
  42            采集10次，取中间3次平均
  43          */ 
  44          double batteryScan(void)
  45          { 
  46   1        unsigned int batteryValue = 0;
  47   1        unsigned int batteryValuetmp = 0;
  48   1        unsigned char i = 0;
  49   1        double realBatteryValue = 0;
  50   1        unsigned int left = 0;
  51   1          
  52   1        //SendString4(" batteryScan in \n ");
  53   1        // 主循环一次采集一次
  54   1      //  batteryValue[getBatteryTimes++] = read_adc1024(4);
  55   1      //  
C51 COMPILER V9.52.0.0   POWER                                                             06/08/2016 09:44:06 PAGE 2   

  56   1      //  if(getBatteryTimes == 10){  // 采集10次 输出一次
  57   1      //  
  58   1      //  realBatteryValue = STABLEV * 1024 / (batteryValue[3] + batteryValue[6] + batteryValue[9]) * 3;
  59   1      //
  60   1      //  left = realBatteryValue * 100 - (unsigned int)(realBatteryValue) * 100;
  61   1      //
  62   1      //  SendData4(0xff);
  63   1      //  SendData4(batteryValue);
  64   1      //  
  65   1      //  SendData4((unsigned char) realBatteryValue);
  66   1      //  SendData4(left);    
  67   1      //
  68   1      //  // 清零
  69   1      //  for(; i < 10; i++)
  70   1      //    batteryValue[i] = 0;
  71   1      //  getBatteryTimes = 0;
  72   1      //
  73   1      //  return realBatteryValue;
  74   1      //  }
  75   1      //  else
  76   1      //    return 0;
  77   1      
  78   1        
  79   1        // 自己采集10次
  80   1        for(; i < 10; i++){
  81   2          batteryValuetmp = read_adc1024(4);
  82   2          if(batteryValuetmp > batteryValue)
  83   2            batteryValue = batteryValuetmp;
  84   2          Delay3us();
  85   2        }
  86   1      
  87   1        
  88   1        realBatteryValue = STABLEV * 1024 / batteryValue;
  89   1      
  90   1        left = realBatteryValue * 100 - (unsigned int)(realBatteryValue) * 100;
  91   1      
  92   1      //  SendData4(0xff);
  93   1      //  SendData4(batteryValue);
  94   1      
  95   1      //  SendData4(0xaa);
  96   1      //  SendData4((unsigned char) realBatteryValue);
  97   1      //  SendData4(left);    
  98   1      
  99   1      
 100   1        return realBatteryValue;
 101   1      
 102   1      }
 103          
 104          
 105          unsigned char getBatteryPercent()
 106          {
 107   1      //  char output[20] = {0};
 108   1        unsigned char batteryPercentage = 0;
 109   1        double batteryValue = batteryScan();
 110   1      
 111   1        
 112   1        if(batteryValue != 0){
 113   2          
 114   2          batteryPercentage = (batteryValue - 2.7) * 100 / (STDVCC - 2.7);
 115   2      
 116   2      //    sprintf(output, "BAT %d\% \n ", batteryPercentage);
 117   2      //    SendData4(0xbb);
C51 COMPILER V9.52.0.0   POWER                                                             06/08/2016 09:44:06 PAGE 3   

 118   2      //    SendData4(batteryValue);
 119   2          
 120   2      //    SendData4((unsigned char)batteryPercentage);
 121   2      //    SendString4(output);
 122   2      //    WriteTestMessage57(output);
 123   2          return (unsigned char)batteryPercentage;
 124   2          }
 125   1        else
 126   1          return 0;
 127   1      }
 128          
 129          
 130          
 131          
 132          /*
 133            功能 读取温度
 134            公式
 135              V0 = (6.25 mv/C * T C) + 424mv
 136              V0 = Vcc * 1000 mv * tempAdcValue / 1024
 137          */ 
 138          
 139          double tempScan(void)
 140          {
 141   1        unsigned int tempAdcValue[10];  // ADC采集的值
 142   1        unsigned int avgTempAdcValue; // ADC平均温度
 143   1        double realTempValue = 0; // 温度最终结果
 144   1        unsigned char left = 0;
 145   1        unsigned char i = 0;
 146   1        
 147   1        double getVcc = batteryScan();  // 获取工作电压
 148   1      
 149   1        for(; i < 10; i++){
 150   2          tempAdcValue[i] = read_adc1024(5);
 151   2          Delay3us();
 152   2        }
 153   1        avgTempAdcValue = (tempAdcValue[3] + tempAdcValue[6] + tempAdcValue[9]) / 3;
 154   1        
 155   1        realTempValue = ((getVcc * avgTempAdcValue * 0.9765) - 424) / 6.25;
 156   1      
 157   1        left = realTempValue * 100 - (unsigned int)(realTempValue) * 100;
 158   1      
 159   1        if(realTempValue > 85)
 160   1          System_Power_Vcc_ON_OFF = 0;
 161   1          
 162   1        //SendData4(0xEE);
 163   1        //SendData4(avgTempAdcValue >> 8);
 164   1        //SendData4(avgTempAdcValue);
 165   1        
 166   1        //SendData4(0xEF);
 167   1        //SendData4((unsigned char)realTempValue);
 168   1        //SendData4(left);
 169   1        
 170   1        return realTempValue;
 171   1      }
 172          
 173          
 174          
 175          /*
 176            功能 检测充电状态
 177            P07 读到 高或低电平
 178          */
 179          unsigned char checkCharging(void)
C51 COMPILER V9.52.0.0   POWER                                                             06/08/2016 09:44:06 PAGE 4   

 180          {
 181   1        P0M1 |= 0x80;
 182   1        P0M0 &= ~0x01;  // 高阻输入
 183   1        if(P07 == 1)
 184   1        {
 185   2          SendString4(" USB charge \n");
 186   2          //clear();
 187   2          OledWriteMessage57(" USB charge ");
 188   2          return 1;
 189   2        }
 190   1        else
 191   1        {
 192   2          SendString4(" USB  offset \n");
 193   2          //clear();
 194   2          OledWriteMessage57(" USB  offset ");
 195   2          return 0;
 196   2        }
 197   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    703    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =      1      46
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
